spring.application.name=multiplex

# Spring Data JPA and PostgreSQL Configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/badger
spring.datasource.username=badger
spring.datasource.password=regdab
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

# Spring Security OAuth2 Client Configuration for Google
# You MUST get these values from the Google Cloud Console
# Create a new "OAuth 2.0 Client ID" with application type "Web application"
# Set "Authorized redirect URIs" to http://localhost:8080/login/oauth2/code/google
spring.security.oauth2.client.registration.google.client-id=YOUR_GOOGLE_CLIENT_ID
spring.security.oauth2.client.registration.google.client-secret=YOUR_GOOGLE_CLIENT_SECRET
spring.security.oauth2.client.registration.google.scope=openid,profile,email

# You can add other providers here as well, for example:
# spring.security.oauth2.client.registration.microsoft.client-id=YOUR_MICROSOFT_CLIENT_ID
# spring.security.oauth2.client.registration.microsoft.client-secret=YOUR_MICROSOFT_CLIENT_SECRET
# spring.security.oauth2.client.registration.microsoft.scope=openid,profile,email
